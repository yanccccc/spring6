工厂方法模式：Factory Method Pattern

1. 工厂方法模式可以解决简单工厂模式当中的OCP问题。
    怎么解决的？一个工厂对应生产一种产品。
    这样工厂就不是全能类了，不是上帝类了。
    另外，也可以符合OCP原则。

2. 工厂方法模式中的角色：
    * 抽象产品角色 Weapon
    * 具体产品角色 Dagger Gun
    * 抽象工厂角色 WeaponFactory
    * 具体工厂角色 DaggerFactory GunFactory

3. 工厂方法模式的优点：
    当你扩展一个产品的时候，符合OCP原则，因为只需要添加两个类，一个类是具体产品类，一个类是具体工厂类。都是添加类，没有修改之前的代码，所以符合OCP。
    ● 一个调用者想创建一个对象，只要知道其名称就可以了。
    ● 扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。
    ● 屏蔽产品的具体实现，调用者只关心产品的接口。

4. 工厂方法模式的缺点：
    每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，
    在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。